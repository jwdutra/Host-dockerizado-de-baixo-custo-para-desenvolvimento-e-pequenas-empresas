version: '3' # Versão do Docker Compose

services: # Definição dos serviços

  zookeeper: # Serviço Zookeeper
    image: confluentinc/cp-zookeeper:7.3.0 # Imagem do Zookeeper
    hostname: zookeeper # Nome do host
    container_name: zookeeper # Nome do container
    ports:
      - "2181:2181" # Mapeamento de portas
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181 # Porta do cliente Zookeeper
      ZOOKEEPER_TICK_TIME: 2000 # Tempo de tick do Zookeeper
    restart: always # Reiniciar sempre
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data # Volume para dados do Zookeeper
      - zookeeper_log:/var/lib/zookeeper/log # Volume para logs do Zookeeper
    deploy:
      resources:
        limits:
          cpus: '1.0' # Limite de CPU
          memory: 1G # Limite de memória
    logging:
      driver: "json-file" # Driver de log
      options:
        max-size: "10m" # Tamanho máximo do log
        max-file: "3" # Número máximo de arquivos de log

  kafka: # Serviço Kafka
    image: confluentinc/cp-server:7.3.0 # Imagem do Kafka
    hostname: kafka # Nome do host
    container_name: kafka # Nome do container
    depends_on:
      - zookeeper # Dependência do Zookeeper
    ports:
      - "9092:9092" # Mapeamento de portas
      - "9094:9094" # Mapeamento de portas
    environment:
      KAFKA_BROKER_ID: 1 # ID do broker Kafka
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181' # Conexão com o Zookeeper

      # Defina os protocolos de segurança
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,OUTSIDE:SSL # Mapeamento de protocolos de segurança
      KAFKA_LISTENER_SECURITY_PROTOCOL: SSL # Protocolo de segurança

      # Endereços do Kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://$HOST_IP:9092,OUTSIDE://$HOST_NAME:9094 # Listeners anunciados
      # Configure as variáveis $HOST_IP e $HOST_NAME com o ip e o nome do host da máquina na stack no portainer

      # Configurações adicionais de Kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # Fator de replicação do tópico de offsets
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 # Atraso inicial de reequilíbrio do grupo
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1 # Fator de replicação do tópico de licença Confluent
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1 # Fator de replicação do tópico de balanceamento Confluent
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1 # ISR mínimo do log de estado de transação
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1 # Fator de replicação do log de estado de transação

      # Metrics e configurações do Confluent
      CONFLUENT_METRICS_ENABLE: 'false' # Métricas Confluent desativadas
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous' # ID do cliente Confluent
    volumes:
      - kafka_data:/var/lib/kafka/data # Volume para dados do Kafka
    deploy:
      resources:
        limits:
          cpus: '2.0' # Limite de CPU
          memory: 2G # Limite de memória
      labels:
        - "traefik.enable=true" # Habilitar Traefik
        - "traefik.http.routers.kafka.service=kafka" # Serviço Traefik
        - "traefik.http.routers.kafka.rule=Host(`$HOST_NAME`)" # Regra de host Traefik
        - "traefik.http.routers.kafka.entrypoints=websecure" # Pontos de entrada Traefik
        - "traefik.http.routers.kafka.tls.certresolver=letsencrypt" # Resolvedor de certificado TLS Traefik
        - "traefik.http.services.kafka.loadbalancer.server.port=9092" # Porta do balanceador de carga Traefik
        - "traefic.http.routers.kafka.tls=true" # Habilitar TLS Traefik
    logging:
      driver: "json-file" # Driver de log
      options:
        max-size: "10m" # Tamanho máximo do log
        max-file: "3" # Número máximo de arquivos de log
    restart: always # Reiniciar sempre

  control-center: # Serviço Control Center
    image: confluentinc/cp-enterprise-control-center:7.3.0 # Imagem do Control Center
    hostname: control-center # Nome do host
    container_name: control-center # Nome do container
    depends_on:
      - kafka # Dependência do Kafka
    ports:
      - "9021:9021" # Mapeamento de portas
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092' # Servidores bootstrap do Control Center
      CONTROL_CENTER_REPLICATION_FACTOR: 1 # Fator de replicação do Control Center
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1 # Partições de tópicos internos do Control Center
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1 # Partições de tópicos de interceptação de monitoramento do Control Center
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1 # Fator de replicação do tópico de métricas Confluent
      PORT: 9021 # Porta do Control Center
    deploy:
      resources:
        limits:
          cpus: '1.0' # Limite de CPU
          memory: 1G # Limite de memória
    logging:
      driver: "json-file" # Driver de log
      options:
        max-size: "10m" # Tamanho máximo do log
        max-file: "3" # Número máximo de arquivos de log
    restart: always # Reiniciar sempre

  kafka-ui: # Serviço Kafka UI
    container_name: kafka-ui # Nome do container
    image: provectuslabs/kafka-ui:latest # Imagem do Kafka UI
    depends_on:
      - kafka # Dependência do Kafka
      - zookeeper # Dependência do Zookeeper
    ports:
      - 8082:8080 # Mapeamento de portas
    environment:
      KAFKA_CLUSTERS_0_NAME: local # Nome do cluster Kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:29092' # Servidores bootstrap do cluster Kafka
      KAFKA_CLUSTERS_0_ZOOKEEPER: 'zookeeper:2181' # Zookeeper do cluster Kafka
    deploy:
      resources:
        limits:
          cpus: '0.5' # Limite de CPU
          memory: 512M # Limite de memória
    logging:
      driver: "json-file" # Driver de log
      options:
        max-size: "10m" # Tamanho máximo do log
        max-file: "3" # Número máximo de arquivos de log
    restart: always # Reiniciar sempre

volumes: # Definição dos volumes
  zookeeper_data: # Volume para dados do Zookeeper
  zookeeper_log: # Volume para logs do Zookeeper
  kafka_data: # Volume para dados do Kafka